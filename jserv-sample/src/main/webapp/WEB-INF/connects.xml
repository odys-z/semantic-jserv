<?xml version="1.0" encoding="UTF-8"?>
<conns>
  <t id="drvmnger" pk="id" columns="id,type,isdef,src,usr,pswd,dbg,smtcs">
  	<!-- drvmnger table is used to configure basic db connection, for pooled datasource, see bdcp -->
  	<!-- smtcs: semantics configuration used only for the connection.
  		(And a global semantics configuration?) -->
  	<c>
  		<id>sys-sqlite</id>
  		<type>sqlite</type>
  		<isdef>true</isdef>
  		<!-- For sqlite, src = relative path from this configure file.
  			So connection string can be: jdbc:sqlite:WEB-INF/remote.db
  			-->
  		<src>sample/system.sqlite</src>
  		<usr>test</usr>
  		<pswd>test</pswd>
  		<!-- enable sql printing -->
  		<dbg>true</dbg>
  		<smtcs>semantics-sys.xml</smtcs>
  	</c>

  	<c>
  		<!-- This id must be the same as in workflow-meta.xml/t[cfg]/k[conn]/v -->
  		<id>cheap-sqlite</id>
  		<type>sqlite</type>
  		<isdef></isdef>
  		<src>sample/cheap.sqlite</src>
  		<usr>test</usr>
  		<pswd>test</pswd>
  		<!-- enable sql printing -->
  		<dbg>true</dbg>
  		<smtcs>semantics-workflow.xml</smtcs>
  	</c>
  	
  	<c>
  		<!-- Create data like:
  		insert into vector VALUES("v 001", "amount", "80-", "100", "A1", "B1", "C1", "D1", "E1", "F1");
		insert into vector VALUES("v 002", "amount", "80-", "103", "A1", "B2", "C2", "D2", "E2", "F2");
		insert into vector VALUES("v 003", "amount", "80-", "105", "A1", "B1", "C3", "D1", "E3", "F1");
		insert into vector VALUES("v 004", "amount", "80-", "113", "A2", "B1", "C3", "D2", "E4", "F2");
		insert into vector VALUES("v 005", "amount", "80-", "111", "A1", "B1", "C1", "D3", "E1", "F1");
		insert into vector VALUES("v 006", "amount", "80-", "103", "A2", "B1", "C2", "D2", "E2", "F2");
		insert into vector VALUES("v 007", "amount", "80-", "105", "A3", "B1", "C4", "D3", "E3", "F1");
		insert into vector VALUES("v 008", "amount", "80-", "106", "A3", "B1", "C2", "D4", "E4", "F2");
  		-->
  		<id>raw-vec</id>
  		<type>sqlite</type>
  		<isdef></isdef>
  		<src>sample/vectors.sqlite</src>
  		<usr>test</usr>
  		<pswd>test</pswd>
  		<!-- enable sql printing -->
  		<dbg>true</dbg>
  		<smtcs>semantics-vec.xml</smtcs>
  	</c>
  </t>

  <t id="dbcp" pk="id" columns="id,type,src,usr,pswd,isdef,dbg,smtcs">
  	<!-- dbcp table is used to pooled db datasource, for basic connection, see dao -->
  	<!-- type: mysql | oracle | mssql -->
  	<!-- id: client specify id for the desired target data source -->
  	<!-- src: connection name, e.g. context.xml/Context/Resource [name] -->
  	<!-- dbg: true for printing sql -->
  	<!-- smtcs: semantics configuration used only for the connection.
  		(And a global semantics configuration?) -->

	<!-- A pooled connection configuration example for Tomcat 6, 7, 8
  		in %CATALINA_HOME/conf/server.xml/GlobalNamingResoure/Resource:
  	<Resource name="jdbc/semantic-DA" global="jdbc/semantic-DA" 
  			auth="Container" type="javax.sql.DataSource"
  			maxActive="10" maxIdle="3" maxWait="10000"
  			username="odysz" password="..." driverClassName="com.mysql.jdbc.Driver"
  			url="jdbc:mysql://...:3306/prj" connectionProperties="useUnicode=yes;characterEncoding=utf8;autoReconnect=true;autoReconnectForPools=true" />
  	 -->
   	<c>
  		<id>io.odys-z</id>
  		<type>mysql</type>
  		<src>jdbc/inet-sample</src>
  		<isdef></isdef>
  		<!-- Not used -->
  		<usr></usr>
  		<!-- Not used (will be protected in cipher in the future -->
  		<pswd></pswd>
  		<dbg>true</dbg>
  	</c>

	<!-- See https://odys-z.github.io/notes/jclient/quick-start.html#java -->
   	<c>
  		<id>orcl.alarm-report</id>
  		<type>orcl</type>
  		<src>jdbc/orcl-temp</src>
  		<isdef></isdef>
  		<!-- Not used -->
  		<usr></usr>
  		<!-- Not used (will be protected in cipher in the future -->
  		<pswd></pswd>
  		<dbg>true</dbg>
  		<smtcs>semantics-orcl.xml</smtcs>
  	</c>

  </t>
</conns>