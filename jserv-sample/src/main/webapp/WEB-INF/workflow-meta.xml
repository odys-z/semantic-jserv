<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<workflow>
  <!-- version 0.7.2 -->
  <t id="cfg" pk="k" columns="k,v">
  	<s> <k>conn</k>
  		<v>cheap-sqlite</v>
  	</s>
  	<s> <k>enable-checker</k>
  		<!-- CheapApiTest won't work if true -->
  		<v>false</v>
  	</s>
  	<s> <k>user-meta</k>
		<v>a_user,userId,userName,roleId</v>
	</s>
	<s> <k>wfrights-meta</k>
		<v>oz_wfrigths,nodeId,roleId</v>
	</s>
  </t>

  <t id="semantics" pk="id" columns="id,smtc,tabl,pk,args">
	<!-- smtc: semantics type, e.g. auto: auto increase key.
  			see javadoc: https://odys-z.github.io/javadoc/semantic.DA/io/odysz/semantic/DASemantics.smtype.html 
  		tabl: database table name
  		pk:
  		args: arguments for sementics handlers. For args for different handlers, see above javadoc link.
	 -->
  	<!-- expense task table's oper/opertime -->
  	<s> <id>01</id>
  		<smtc>o-t</smtc>
  		<tabl>r_expense</tabl>
  		<pk>expenseId</pk>
  		<args>addUser,addDate</args>
  	</s>

  	<!-- task details table's auto pk
  	<s> <id>02</id>
  		<smtc>pk</smtc>
  		<tabl>task_details</tabl>
  		<pk>recId</pk>
  		<args>recId</args>
  	</s>
  	-->

  	<!-- expense task details table's fk to r_expense.taskId (in business semantics, task details is a children of tasks)
		Args[0]: referencing col, [1]: target table, [2] target pk col
  		For args details, see semantic.DA/io.odysz.semantic.smtype#fkIns 
  	-->
  	<s> <id>03</id>
  		<smtc>fk-ins</smtc>
  		<tabl>r_expensedetails</tabl>
  		<pk>expenseId</pk>
  		<args>expenseId,r_expense,expenseId</args>
  	</s>
  	
  </t>

  <t id="right-ds" pk="sk" columns="sk,cols,mysql,orcl,ms2k,sqlit,s-tree">
	<!-- This table is used for define sqls that can be parameterized when serving data.

		Cmds selected from this is compared to request's cmd name.
		If the requested cmd is in the results, then the user has the rights to commit a workflow command.
		
		CheapEngin using 'sk' from oz_wfnodes.cmdRights to find user's rights.
		sql values: [0] cmd-id (configured in oz_wfcmds.cmd), [1] cmd-flags;
		args: [%1$s] wfid, [%2$s] node-id, [%3$s] user-id, [%4$s] task-id
		columns: command-id, command-text
		Note: for a start command, task-id is null. If you are checking task-id on a starting node, that's a semantic error.
	 -->
	<s>
		<!-- ds-allcmd is configured in oz_workflow.rights
			Tip: to make CheapEngin working more stable, keep at leats one rights configure rule, with sk = ds-allcmd.
			CheapEngin will use this as default if the workflow configured nothing for a node rights.
		-->
  		<sk>ds-allcmd-backup</sk>
  		<mysql>select c.cmd, c.txt, n.nodeId, nodeName, cmdRights, r.roleId
  		from oz_wfnodes n left outer join oz_wfcmds c on n.nodeId = c.nodeId and n.wfId = '%1$s'
  		left outer join oz_wfrights r on c.cmd = r.cmd and r.roleId = '%2$s';</mysql>
  		<sqlite>select c.cmd, c.txt, n.nodeId, nodeName, cmdRights, r.roleId
  		from oz_wfnodes n left outer join oz_wfcmds c on n.nodeId = c.nodeId and n.wfId = '%1$s'
  		left outer join oz_wfrights r on c.cmd = r.cmd and r.roleId = '%2$s';</sqlite>
	</s>
	
	<!-- semantics: oz_wfrights is a relationship table linking to roles, oz_wfcmds,
		roleId is the user's role when he/she has rights to commit the command -->
	<s>
		<sk>ds-allcmd</sk>
  		<mysql>SELECT c.cmd, rightFilter from oz_wfcmds c join oz_wfnodes n
  		on c.nodeId = n.nodeId and n.wfId = '%1$s' and n.nodeId = '%2$s'
  		join a_user u on u.userId = '%3$s'
  		join oz_wfrights r on n.nodeId = r.nodeId and r.roleId = u.roleId</mysql>
  		<sqlit>SELECT c.cmd, rightFilter from oz_wfcmds c join oz_wfnodes n
  		on c.nodeId = n.nodeId and n.wfId = '%1$s' and n.nodeId = '%2$s'
  		join a_user u on u.userId = '%3$s'
  		join task_rights r on n.nodeId = r.nodeId and r.roleId = u.roleId</sqlit>
  	</s>

	<s>
		<!-- ds-v1 is configured in oz_wfnodes.cmdRights -->
  		<sk>ds-v1</sk>
  		<mysql>SELECT cmd, rightFilter from oz_wfcmds c join oz_wfnodes n
  		on c.nodeId = n.nodeId and n.wfId = '%1$s' and n.nodeId = '%2$s' and rightFilter = 'a'</mysql>
  		<sqlit>SELECT cmd, rightFilter from oz_wfcmds c join oz_wfnodes n
  		on c.nodeId = n.nodeId and n.wfId = '%1$s' and n.nodeId = '%2$s' and rightFilter = 'a'</sqlit>
	</s>
  </t>
  
  <t id="cheap-checker" pk="wfid" columns="wfid,ms,mysql,orcl,ms2k,sqlit">
  	<!--CheapChecker using this configure for checking timeout events.
  		Each record will create a thread.
  		ms: checker's polling time, milliseconds -->
  	<s>
  		<wfid>chg01</wfid>
  		<ms>20000</ms>
  		<mysql>select TIMESTAMPDIFF(minute, opertime, now()) expMin, i.opertime, n.timeouts, n.timeoutRoute, n.wfId, i.nodeId nodeId, i.taskId taskId, i.instId
		from ir_prjnodes i join oz_wfnodes n on i.nodeId = n.nodeId and n.timeouts > 0 and (n.timeouts > 0 and  or i.handlingCmd = 'start')
		where TIMESTAMPDIFF(second, opertime, now()) > n.timeouts;</mysql>
  		<sqlit></sqlit>
	</s>
  	<s>
  		<wfid>t01</wfid>
  		<ms>20000</ms>
  		<mysql></mysql>
  		<sqlit>select (CAST(strftime('%s', CURRENT_TIMESTAMP) as integer) - CAST(strftime('%s', i.opertime) as integer) )/60 expMin, 
		i.opertime, n.timeouts, n.timeoutRoute, n.wfId, i.nodeId nodeId, i.taskId taskId, i.instId
		from task_nodes i join oz_wfnodes n on i.nodeId = n.nodeId and (n.timeouts > 0 and  or i.handlingCmd = 'start')
		where CAST(strftime('%s', CURRENT_TIMESTAMP) as integer) - CAST(strftime('%s', i.opertime) as integer) > n.timeouts</sqlit>
	</s>

  </t>
</workflow>
